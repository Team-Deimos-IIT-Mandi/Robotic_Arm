name: "ü§ñ Build, Test, and Deploy ROS Container"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository code"
        uses: actions/checkout@v4

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Build Docker image for testing"
        run: docker build -t my-robot-image:test .

      - name: "Debug: List available ROS packages"
        run: |
          echo "=== Checking container startup ==="
          docker run --rm my-robot-image:test echo "Container started successfully"
          
          echo "=== Available ROS packages ==="
          docker run --rm my-robot-image:test bash -c "source /opt/ros/noetic/setup.bash && source /root/ros_ws/devel/setup.bash && rospack list | grep -E '(arm|urdf|robot)'"

      - name: "Run Sanity Checks on Container"
        run: |
          # Test that the container can run and find a core ROS package
          echo "=== Testing core ROS package ==="
          docker run --rm my-robot-image:test rospack find roscpp

          # Test workspace sourcing
          echo "=== Testing workspace setup ==="
          docker run --rm my-robot-image:test bash -c "source /opt/ros/noetic/setup.bash && source /root/ros_ws/devel/setup.bash && echo 'ROS_PACKAGE_PATH:' && echo \$ROS_PACKAGE_PATH"

          # Find your actual package name (replace 'your_package_name' with actual name)
          echo "=== Testing your package ==="
          # IMPORTANT: Replace 'your_package_name' with your actual package name from src folder
          # Based on your folder structure, it might be something like 'robotic_arm' or check your package.xml
          # docker run --rm my-robot-image:test rospack find arm_moveit_config

  push-to-registry:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: "Checkout repository code"
        uses: actions/checkout@v4
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
      - name: "üîí Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "üè∑Ô∏è Set up Docker metadata"
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ak9685/robotic-arm-project
      - name: "Build and push Docker image"
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} 